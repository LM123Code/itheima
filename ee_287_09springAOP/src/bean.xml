<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 配置service -->
    <bean id="customerService" class="com.itheima9.service.impl.CustomerServiceImpl"></bean>
    <!-- 基于xml的aop配置 -->
    <!--1.把通知类交给spring来管理-->
    <bean id="logger" class="com.itheima9.utils.Logger"></bean>

    <!--2.导入aop名称空间，并且使用aop:config开始aop配置-->
    <aop:config>
        <!--定义通用切入点表达式：如果写在了aop:aspect标签外部，则表示所有切面可用-->
            <aop:pointcut id="pt1" expression="execution(* com.itheima9.service.impl.*.*(..))"></aop:pointcut>
        <!--3.使用aop:aspect配置切面  id属性用于给切面提供唯一标示  ref属性用于通知bean的id-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--4.配置通知的类型，指定增强的方法何时执行  method属性指定增强的方法名称  pointcut指定切入点表达式-->
            <!--切入点表达式
                关键字：execution(表达式)
                表达式写法：
                    访问修饰符  返回值  包名.类名.方法名.参数列表
                全匹配方式：
                    public void com.itheima9.service.impl.CustomerServiceImpl.saveCustomer()
                访问修饰符可以省略
                    void com.itheima9.service.impl.CustomerServiceImpl.saveCustomer()
                返回值可以使用通配符，表示任意返回值，通配符为*
                    * com.itheima9.service.impl.CustomerServiceImpl.saveCustomer()
                包名可以使用通配符，表示任意包。但是，有几个包需要写几个*
                    * *.*.*.*.CustomerServiceImpl.saveCustomer()
                包名可以使用..表示当前包及其子包
                    * *..*.saveCustomer()
                类名和方法名都可以使用通配符
                    * *..*.*()       注：只能是无参的方法
                参数列表可以使用具体类型，来表示参数类型
                    基本类型直接写类型名称
                    引用类型必须是包名.类名
                参数列表可以使用通配符，表示任意参数，但是必须有参数
                    * *..*.*(*)
                参数列表可以使用..表示有无参数均可，有参数可以是任意类型
                    * *..*.*(..)
                全通配方式：
                    * *..*.*(..)
                实际开发中，我们都是对业务层方法进行增强：
                    所以写法：* com.itheima9.service.impl.*.*(..)
            -->
            <aop:before method="printLog" pointcut-ref="pt1"></aop:before>
            <!--定义通用切入点表达式：如果写在了aop:aspect标签内部，则表示只有当前切面可用
            <aop:pointcut id="pt1" expression="execution(* com.itheima9.service.impl.*.*(..))"></aop:pointcut>-->
        </aop:aspect>
    </aop:config>

</beans>